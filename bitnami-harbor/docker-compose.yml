# Copyright VMware, Inc.
# SPDX-License-Identifier: APACHE-2.0
# Updated by @talltechy
---
version: '2'

services:
  registry:
    image: docker.io/bitnami/harbor-registry:2
    environment:
      - REGISTRY_HTTP_SECRET=CHANGEME
    volumes:
      - harbor_registry_data:/storage
      - /mnt/usr/appdata/harbor_config/config/registry/:/etc/registry/:ro
    container_name: harbor-registry
    networks:
      default:

  registryctl:
    image: docker.io/bitnami/harbor-registryctl:2
    environment:
      - CORE_SECRET=CHANGEME
      - JOBSERVICE_SECRET=CHANGEME
      - REGISTRY_HTTP_SECRET=CHANGEME
    volumes:
      - harbor_registry_data:/storage
      - /mnt/usr/appdata/harbor_config/config/registry/:/etc/registry/:ro
      - /mnt/usr/appdata/harbor_config/config/registryctl/config.yml:/etc/registryctl/config.yml:ro
    networks:
      default:

  postgresql:
    image: docker.io/bitnami/postgresql:13
    container_name: harbor-db
    environment:
      - POSTGRESQL_PASSWORD=bitnami
      - POSTGRESQL_DATABASE=registry
    volumes:
      - harbor_postgresql_data:/bitnami/postgresql
    networks:
      default:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3

  core:
    image: docker.io/bitnami/harbor-core:2
    container_name: harbor-core
    depends_on:
      - registry
    environment:
      - CORE_KEY=change-this-key
      - _REDIS_URL_CORE=redis://redis:6379/0
      - SYNC_REGISTRY=false
      - CHART_CACHE_DRIVER=redis
      - _REDIS_URL_REG=redis://redis:6379/1
      - PORT=8080
      - LOG_LEVEL=info
      - EXT_ENDPOINT=http://reg.mydomain.com
      - DATABASE_TYPE=postgresql
      - REGISTRY_CONTROLLER_URL=http://registryctl:8080
      - POSTGRESQL_HOST=postgresql
      - POSTGRESQL_PORT=5432
      - POSTGRESQL_DATABASE=registry
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=bitnami
      - POSTGRESQL_SSLMODE=disable
      - REGISTRY_URL=http://registry:5000
      - TOKEN_SERVICE_URL=http://core:8080/service/token
      - HARBOR_ADMIN_PASSWORD=bitnami
      - CORE_SECRET=CHANGEME
      - JOBSERVICE_SECRET=CHANGEME
      - CORE_URL=http://core:8080
      - JOBSERVICE_URL=http://jobservice:8080
      - REGISTRY_STORAGE_PROVIDER_NAME=filesystem
      - REGISTRY_CREDENTIAL_USERNAME=harbor_registry_user
      - REGISTRY_CREDENTIAL_PASSWORD=harbor_registry_password
      - READ_ONLY=false
      - RELOAD_KEY=
    volumes:
      - harbor_core_data:/data
      - /mnt/usr/appdata/harbor_config/config/core/app.conf:/etc/core/app.conf:ro
      - /mnt/usr/appdata/harbor_config/config/core/private_key.pem:/etc/core/private_key.pem:ro
    networks:
      default:

  portal:
    image: docker.io/bitnami/harbor-portal:2
    container_name: harbor-portal
    depends_on:
      - core
    networks:
      default:

  jobservice:
    image: docker.io/bitnami/harbor-jobservice:2
    container_name: harbor-jobservice
    depends_on:
      - redis
      - core
    environment:
      - CORE_SECRET=CHANGEME
      - JOBSERVICE_SECRET=CHANGEME
      - CORE_URL=http://core:8080
      - REGISTRY_CONTROLLER_URL=http://registryctl:8080
      - REGISTRY_CREDENTIAL_USERNAME=harbor_registry_user
      - REGISTRY_CREDENTIAL_PASSWORD=harbor_registry_password
    volumes:
      - harbor_jobservice_data:/var/log/jobs
      - /mnt/usr/appdata/harbor_config/config/jobservice/config.yml:/etc/jobservice/config.yml:ro
    networks:
      default:
    restart: on-failure:3 # Only restart if the container fails 3 times

  redis:
    image: docker.io/bitnami/redis:7.0
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - harbor_redis_data:/bitnami/redis
    networks:
      default:

  harbor-nginx:
    image: docker.io/bitnami/nginx:1.25
    container_name: nginx
    volumes:
      - /mnt/usr/appdata/harbor_config/config/proxy/nginx.conf:/opt/bitnami/nginx/conf/nginx.conf:ro
    ports:
      - '80:8080'
    networks:
      default:
      br4.10:
        ipv4_address: ${STATIC_IP:-}
    depends_on:
      postgresql:
        condition: service_healthy
      registry:
        condition: service_started
      core:
        condition: service_started
      portal:
        condition: service_started
      jobservice:
        condition: service_started

networks:
  default:
    driver: bridge
  br4.10:
    external: true

volumes:
  harbor_registry_data:
    driver: local
  harbor_core_data:
    driver: local
  harbor_jobservice_data:
    driver: local
  harbor_postgresql_data:
    driver: local
  harbor_redis_data:
    driver: local
